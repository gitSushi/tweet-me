{"version":3,"sources":["logo.svg","tweets/components.js","lookup/components.js","App.js","index.js"],"names":["module","exports","TweetsComponent","props","textareaRef","createRef","useState","newTweets","setNewTweets","className","onSubmit","event","preventDefault","newValue","current","value","tempNewTweets","unshift","content","likes","id","ref","required","name","type","TweetList","tweetsInit","setTweetsInit","tweets","setTweets","useEffect","final","concat","length","callback","xhr","XMLHttpRequest","responseType","open","onload","response","status","onerror","e","console","log","message","send","loadTweets","map","tweet","index","Tweet","key","ActionBtn","action","setLikes","userLike","setUserLike","actionDisplay","display","onClick","App","src","logo","alt","appEL","document","getElementById","ReactDOM","render","StrictMode","tweetEL"],"mappings":"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","file":"static/js/main.7a3f73ee.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { createRef, useEffect, useState } from \"react\";\r\nimport { loadTweets } from \"../lookup\";\r\n\r\nexport function TweetsComponent(props) {\r\n  const textareaRef = createRef();\r\n  const [newTweets, setNewTweets] = useState([]);\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    const newValue = textareaRef.current.value;\r\n    let tempNewTweets = [...newTweets];\r\n    tempNewTweets.unshift({\r\n      content: newValue,\r\n      likes: 0,\r\n      id: 46453\r\n    });\r\n    setNewTweets(tempNewTweets);\r\n    textareaRef.current.value = \"\";\r\n  };\r\n  return (\r\n    <div className={props.className}>\r\n      <div className=\"col-12 mb-3\">\r\n        <form onSubmit={handleSubmit}>\r\n          <textarea\r\n            ref={textareaRef}\r\n            required\r\n            className=\"form-control\"\r\n            name=\"tweet\"\r\n          />\r\n          <button type=\"submit\" className=\"btn btn-primary my-3\">\r\n            Tweet\r\n          </button>\r\n        </form>\r\n      </div>\r\n      <TweetList newTweets={newTweets} />\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction TweetList(props) {\r\n  const [tweetsInit, setTweetsInit] = useState([]);\r\n\r\n  // Maybe useReducer instead\r\n  const [tweets, setTweets] = useState([]);\r\n\r\n  useEffect(\r\n    () => {\r\n      const final = [...props.newTweets].concat(tweetsInit);\r\n      if (final.length !== tweets.length) {\r\n        setTweets(final);\r\n      }\r\n    },\r\n    [props.newTweets, tweets, tweetsInit]\r\n  );\r\n\r\n  useEffect(() => {\r\n    const myCallback = (response, status) => {\r\n      // console.log(response, status);\r\n      if (status === 200) {\r\n        setTweetsInit(response);\r\n      }\r\n    };\r\n    loadTweets(myCallback);\r\n    /*\r\n    // both syntax work -> https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Working_with_Objects#Using_object_initializers\r\n    let tweetItems = [{\"content\": 123}, {content: \"Hi there\"}]\r\n    setTweets(tweetItems);\r\n    */\r\n  }, []);\r\n\r\n  return tweets.map((tweet, index) =>\r\n    <Tweet\r\n      tweet={tweet}\r\n      key={index}\r\n      className=\"my-5 py-5 border bg-white text-dark\"\r\n    />\r\n  );\r\n}\r\n\r\nfunction ActionBtn(props) {\r\n  const { tweet, action } = props;\r\n  const [likes, setLikes] = useState(tweet.likes ? tweet.likes : 0);\r\n  const [userLike, setUserLike] = useState(false);\r\n  // const [userLike, setUserLike] = useState(tweet.userLike === true ? true : false);\r\n  const className = props.className\r\n    ? props.className\r\n    : \"btn btn-primary btn-sm\";\r\n  const actionDisplay = action.display ? action.display : \"Action\";\r\n  const display =\r\n    action.type === \"like\" ? `${likes} ${actionDisplay}` : actionDisplay;\r\n  const handleClick = event => {\r\n    event.preventDefault();\r\n    if (action.type === \"like\") {\r\n      if (userLike === true) {\r\n        setUserLike(false);\r\n        setLikes(likes - 1);\r\n      } else {\r\n        setUserLike(true);\r\n        setLikes(likes + 1);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <button className={className} onClick={handleClick}>\r\n      {display}\r\n    </button>\r\n  );\r\n}\r\n\r\nfunction Tweet(props) {\r\n  const { tweet } = props;\r\n  const className = props.className\r\n    ? props.className\r\n    : \"col-10 mx-auto col-md-6\";\r\n  return (\r\n    <div className={className}>\r\n      <p>\r\n        {tweet.id} - {tweet.content}\r\n      </p>\r\n      <div className=\"btn btn-group\">\r\n        <ActionBtn tweet={tweet} action={{ type: \"like\", display: \"Likes\" }} />\r\n        <ActionBtn\r\n          tweet={tweet}\r\n          action={{ type: \"unlike\", display: \"Unlike\" }}\r\n        />\r\n        <ActionBtn\r\n          tweet={tweet}\r\n          action={{ type: \"retweet\", display: \"Retweet\" }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export function loadTweets(callback) {\r\n  const xhr = new XMLHttpRequest();\r\n  const method = \"GET\";\r\n  const url = \"http://127.0.0.1:8080/api/tweets\";\r\n  const responseType = \"json\";\r\n\r\n  xhr.responseType = responseType;\r\n  xhr.open(method, url);\r\n  xhr.onload = function() {\r\n    callback(xhr.response, xhr.status);\r\n  };\r\n  xhr.onerror = function(e) {\r\n    console.log(\"onerror : \", e);\r\n    callback({ message: \"the request was an error\" }, 400);\r\n  };\r\n  xhr.send();\r\n}\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { TweetsComponent } from \"./tweets\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <div>\n          <TweetsComponent />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { TweetsComponent } from \"./tweets\";\n// import * as serviceWorker from './serviceWorker';\n\nconst appEL = document.getElementById(\"root\");\nif (appEL) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>,\n    appEL\n  );\n}\n\nconst tweetEL = document.getElementById(\"tweetMe2\");\nif (tweetEL) {\n  ReactDOM.render(\n    <React.StrictMode>\n      <TweetsComponent />\n    </React.StrictMode>,\n    tweetEL\n  );\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n// serviceWorker.unregister();\n"],"sourceRoot":""}